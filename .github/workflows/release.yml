name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  cargo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: cargo-publish
        run: |
          rustup update stable
          cargo login ${{ secrets.CARGO_TOKEN }}
          chmod +x cargo_publish.sh
          ./cargo_publish.sh --cargo-only
  pypi:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            platform: linux
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            platform: macos
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            platform: windows
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: setup-tools
        run: |
          rustup update stable
          pip3 install twine build cibuildwheel setuptools-rust tomli
          rustup target add ${{ matrix.target }}
      - name: build
        run: cibuildwheel --output-dir dist --platform ${{ matrix.platform }}
        env:
          # rust doesn't seem to be available for musl linux on i686
          CIBW_SKIP: '*-musllinux_i686'
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH" CARGO_TERM_COLOR="always"'
          CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
          CIBW_BEFORE_BUILD: rustup show
          CIBW_BEFORE_BUILD_LINUX: >
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y &&
            rustup show
          # CIBW_BUILD_VERBOSITY: 1
      - name: upload
        run: |
          twine upload -u mtshiba -p ${{ secrets.PYPI_PASSWORD }} --skip-existing dist/*
        # cargo build --release --target ${{ matrix.target }}
        # python3 -m build --wheel
        # maturin publish -u mtshiba -p ${{ secrets.PYPI_PASSWORD }} --target ${{ matrix.target }} --skip-existing
  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: update-rustup
        run: rustup update stable
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: pylyzer
          target: ${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # static linking to libc
          RUSTFLAGS: ${{ (matrix.target == 'x86_64-unknown-linux-gnu' && '-C target-feature=+crt-static') || '' }}
